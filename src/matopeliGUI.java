
import java.awt.Color;
import java.awt.Graphics;
import java.util.LinkedList;
import matopeli.Logiikka;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author Kalle
 */
public class matopeliGUI extends javax.swing.JFrame {

    /**
     * Creates new form matopeliGUI
     */
    Graphics db;
    Thread runner = null;
    Logiikka peli = new Logiikka();

    public matopeliGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 339, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        int nappain = evt.getKeyCode();

        System.out.println(nappain);

        if (nappain == 38) {  // ylänuoli
            peli.asetaSuunta("ylös");
        }
        if (nappain == 40) {  // alanuoli
            peli.asetaSuunta("alas");
        }
        if (nappain == 37) { // vasennuoli
            peli.asetaSuunta("vasemmalle");
        }
        if (nappain == 39) { // oikeanuoli
            peli.asetaSuunta("oikealle");
        }
        if (nappain == 32) { // Space
            runner = new Thread();
            runner.start();
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(matopeliGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(matopeliGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(matopeliGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(matopeliGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new matopeliGUI().setVisible(true);


            }
        });
    }

    public void run() {

        while (true) {
            peli.etene();
            repaint();

            try {
                runner.sleep(500); //hidastus
            } catch (InterruptedException e) {
            }

        }
    }

    public void stop() {
        if (runner != null) {
            runner.stop();
        }
        runner = null;
    }

    public void paint(Graphics g) {

        LinkedList<Integer> x = peli.getMatoX();
        LinkedList<Integer> y = peli.getMatoY();

        g.setColor(Color.RED);

        for (int i = 0; i < x.size(); i++) {
            g.fillRect(y.get(i) * 10 + 50, x.get(i) * 10 + 50, 9, 9);

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
